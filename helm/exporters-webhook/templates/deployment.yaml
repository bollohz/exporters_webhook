apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "exporters-webhook-chart.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "exporters-webhook-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.autoscaling.minReplicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "exporters-webhook-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "exporters-webhook-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "exporters-webhook-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.generalLabels.webhookContainerName }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - -sidecarCfgDirectory={{ .Values.executableArgs.sidecarCfgDirectory }}
            - -timeout={{ .Values.executableArgs.timeoutWebhookServer }}
            - -port={{ .Values.service.port }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.service.healthEndpoint | quote }}
              port: http
          readinessProbe:
            httpGet:
              path: {{ .Values.service.healthEndpoint | quote }}
              port: http
          volumeMounts:
            {{ $basePathDirectory := .Values.executableArgs.sidecarCfgDirectory }}
            {{- range $path, $config := .Values.configurationMap }}
            - name: configuration-map
              mountPath: "{{ $basePathDirectory }}/{{ $path }}"
              subPath: {{ $path }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: configuration-map
          configMap:
            name: {{ include "exporters-webhook-chart.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
