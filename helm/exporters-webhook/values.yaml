# Default values for exporters-webhook-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#this variable will be injected by the release_chart script!
caBundle: ""

generalLabels:
  partOf: webhooks
  component: webhooks
  webhookContainerName: webhook-server

executableArgs:
  timeoutWebhookServer: 30
  sidecarCfgDirectory: "/etc/exporters_configuration"
  tlsKeyFilePath: /etc/webhook/certs/tls.key
  tlsCertFilePath: /etc/webhook/certs/tls.crt
# Port is defined in the service, so will be retrieved from .Values.service.port

tlsKeyCert:
  volumeName: exporters-webhook-cert
  volumeMountPath: /etc/webhook/certs
  secretName: exporters-webhook-secrets #Written in ../ssl/Makefile for make cert script

configurationMap:
  config_nginx.yaml: |
    name: nginx-exporter
    image: nginx/nginx-prometheus-exporter:0.4.2
    ports:
      - containerPort: 9113
    resources:
      requests:
        memory: "10Mi"
        cpu: "10m"
      limits:
        memory: "50Mi"
        cpu: "200m"
    args: ["-nginx.scrape-uri", "http://localhost:81/nginx-status"]

  config_phpfpm.yaml: |
    name: php-fpm-exporter
    image: hipages/php-fpm_exporter
    ports:
      - containerPort: 9253
    resources:
      requests:
        memory: "10Mi"
        cpu: "10m"
      limits:
        memory: "50Mi"
        cpu: "200m"
    env:
      - name: "PHP_FPM_SCRAPE_URI"
        value: "tcp://localhost:9000/fpm-status"

extraAltNames: []

image:
  repository: bollohz/exporters-webhook
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: 1.0.6

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "exporters-webhook"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1001

service:
  type: ClusterIP
  port: 443
  targetPort: 8443
  healthEndpoint: "/health"
  mutationEndpoint: "/mutate"

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
   limits:
     cpu: 500m
     memory: 256Mi
   requests:
     cpu: 200m
     memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 60
  targetMemoryUtilizationPercentage: 60

nodeSelector: {}

tolerations: []

affinity: {}
